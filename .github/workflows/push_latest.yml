name: Push micromamba docker image

on:
  workflow_dispatch:
  # Run every 6 hours (https://crontab.guru/every-6-hours)
  schedule:
  - cron: '0 */6 * * *'

jobs:
  build_docker_image_and_push:
    if: github.repository == 'mamba-org/micromamba-docker'
    runs-on: [ubuntu-latest]
    strategy:
      matrix:
        arch: ["amd64", "arm64", "ppc64le"]
    steps:
    - name: Checkout source
      uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.x"
    - name: Check available versions
      id: check_version
      run: |
        python -m pip install requests "semver>=2.13.0,<3.0"
        LATEST_VERSION=$(python check_version.py ${{ matrix.arch }})

        echo "For architecture ${{ matrix.arch }}:"
        echo "Found Micromamba version that is not released on docker: ${LATEST_VERSION}"
        echo "::set-output name=latest_version::${LATEST_VERSION}"
    - name: Run tests
      run: ./test.sh
      env:
        DOCKER_BUILDKIT: 1
      if: steps.check_version.outputs.latest_version != 'no_version_found'
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      if: steps.check_version.outputs.latest_version != 'no_version_found'
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      if: steps.check_version.outputs.latest_version != 'no_version_found'
    - name: Build and push Docker images
      id: docker_build
      uses: docker/build-push-action@v2.2.2
      with:
        platforms: linux/${{ matrix.arch }}
        push: true
        build-args: |
          VERSION=${{ steps.check_version.outputs.latest_version }}
        tags: |
          mambaorg/micromamba:${{ steps.check_version.outputs.latest_version }}
          mambaorg/micromamba:latest
      if: steps.check_version.outputs.latest_version != 'no_version_found'
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
      if: steps.check_version.outputs.latest_version != 'no_version_found'
